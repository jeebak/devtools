<?xml version="1.0"?>
<root>

  <item>
    <!-- Compare to: touchcursor.xml -->
    <name>MyTouchCursor</name>

    <item>
      <name>MyTouchCursor, based on: http://touchcursor.sourceforge.net/</name>
      <identifier vk_config="true">notsave.mytouchcursor</identifier>

      <!--
      NOTES:
        - Use: EventViewer to help create new mappings.
        - Order seems to matter
        - Shifted KeyCode:
          __KeyToKey__ KeyCode::D, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
      -->

      <!-- IKJL -->
      <autogen>__KeyToKey__ KeyCode::I, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
       
      <!-- U: home -->
      <autogen>__KeyToKey__ KeyCode::U, KeyCode::HOME</autogen>
      <!-- O: end -->
      <autogen>__KeyToKey__ KeyCode::O, KeyCode::END</autogen>

      <!-- P: delete -->
      <autogen>__KeyToKey__ KeyCode::P, KeyCode::DELETE</autogen>
      <!-- M: forward delete -->
      <autogen>__KeyToKey__ KeyCode::M, KeyCode::FORWARD_DELETE</autogen>

      <!-- H: page up -->
      <autogen>__KeyToKey__ KeyCode::H, KeyCode::PAGEUP</autogen>
      <!-- N: page down -->
      <autogen>__KeyToKey__ KeyCode::N, KeyCode::PAGEDOWN</autogen>

      <!-- A: Option/Alt (pleasant surprise that this worked! -->
      <autogen>__KeyToKey__ KeyCode::A, KeyCode::OPTION_L</autogen>
      <!-- E: Shift -->
      <autogen>__KeyToKey__ KeyCode::E, KeyCode::SHIFT_L</autogen>
      <!-- R: Command -->
      <autogen>__KeyToKey__ KeyCode::R, KeyCode::COMMAND_L</autogen>
      <!-- S: Space (repeatable) -->
      <autogen>__KeyToKey__ KeyCode::S, KeyCode::SPACE</autogen>

      <!-- QFGY: Command AFGY (Select All, Find, Find Again, Redo) -->
      <!-- NOTE: using Q for Select All, as A for Option/All is used more -->
      <autogen>__KeyToKey__ KeyCode::Q, KeyCode::A, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::F, KeyCode::F, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::G, KeyCode::G, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::Y, KeyCode::Y, ModifierFlag::COMMAND_L</autogen>

      <!-- ZXCV: Command ZXCV (Undo, Cut, Copy, Paste) -->
      <autogen>__KeyToKey__ KeyCode::Z, KeyCode::Z, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::X, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::C, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::V, KeyCode::V, ModifierFlag::COMMAND_L</autogen>

      <!-- [TAB]: Command TAB -->
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>

      <!-- W: Delete from cursor to beginning of line -->
      <autogen>
        __KeyToKey__ KeyCode::W,
        KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE
      </autogen>
      <!-- D: Delete from cursor to end of line -->
      <autogen>
        __KeyToKey__ KeyCode::D,
        KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE
      </autogen>

      <!-- T: Tilde / B: Backtick  -->
      <autogen>
        --KeyToKey--
        KeyCode::T,
        KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        --KeyToKey--
        KeyCode::B,
        KeyCode::BACKQUOTE
      </autogen>

      <!--
      <autogen>__KeyToKey__ KeyCode::COLON, ... </autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, ... </autogen>
      <autogen>__KeyToKey__ KeyCode::COMMA, ... </autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, ...   </autogen>
      -->

      <!-- /: Command-/ (Undocumented :) -->
      <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::SLASH, ModifierFlag::COMMAND_L </autogen>
    </item>

    <item>
      <name>Activate MyTouchCursor by Space</name>
      <appendix>(Please adjust "[Key Overlaid Modifier] Initial Modifier Wait" in Key Repeat tab</appendix>
      <appendix>in order to avoid mis-detection of space key if your typing speed is fast.)</appendix>
      <appendix>───────────────────────────────────────</appendix>
      <appendix>TouchCursor: IKJL (↑, ↓, ←, →) UO (Home, End) PM (BS, Delete) HN (PgUp, PgDn)</appendix>
      <appendix>───────────────────────────────────────</appendix>
      <appendix>MyTouchCursor: AERS (⌥, ⇧, ⌘, [Repeatable] Spacebar) (Caps Lock can be: ⌃)</appendix>
      <appendix>NOTE: These can be useful in conjunction with arrow keys, or mouse click actions</appendix>
      <appendix>W: Delete from cursor to beginning of line, D: Delete from cursor to end of line</appendix>
      <appendix>───────────────────────────────────────</appendix>
      <appendix>QFGY: ⌘-[qfgy] (Select All, Find, Find Again, Redo)</appendix>
      <appendix>NOTE: Using 'q' for Select All, as 'a' is used for ⌥ </appendix>
      <appendix>ZXCV: ⌘-[zxcv] (Undo, Cut, Copy, Paste) - [TAB]: ⌘-⇥</appendix>

      <identifier>remap.mytouchcursor</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::SPACE,
        KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_mytouchcursor,
        KeyCode::SPACE
      </autogen>

      <block>
        <config_only>notsave.mytouchcursor</config_only>
        <autogen>__BlockUntilKeyUp__ KeyCode::SPACE</autogen>
      </block>
    </item>

  </item>

  <item>
    <name>External Extras</name>

    <!-- https://github.com/jasonrudolph/keyboard -->
    <item>
      <!--
        Inspired by and adapted from Steve Losh's "Modern Space Cadet" post:
        http://stevelosh.com/blog/2012/10/a-modern-space-cadet/#controlescape
      -->
      <name>F19 to Escape/Control</name>
      <appendix>Tap F19 for Escape; Hold F19 for Control</appendix>
      <appendix>(Recommendation: Use Seil to remap Caps Lock to F19.)</appendix>
      <identifier>com.jasonrudolph.f192f19_escape_or_control</identifier>
      <autogen>
        --KeyOverlaidModifier--
        KeyCode::F19,
        KeyCode::CONTROL_L,
        KeyCode::ESCAPE
      </autogen>
    </item>

    <!-- Originally double-tap left shift, but conflicted with tap shift -->
    <item>
      <name>Double-tap Left ⌘ for CapsLock</name>
      <identifier>com.jasonrudolph.double_lcommand_to_caps</identifier>
      <autogen>__DoublePressModifier__ KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::CAPSLOCK</autogen>
    </item>

    <!-- https://msol.io/blog/tech/work-more-efficiently-on-your-mac-for-developers/ -->
    <item>
      <name>Tap shift to move over words</name>
      <appendix>Shift keys move the cursor one word forward or backward when pressed alone. When used with other keys they act as normal shifts.</appendix>
      <identifier>private.shifts_to_forward_backward_word</identifier>

      <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::SHIFT_R, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
      <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::SHIFT_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
    </item>

    <!--
      http://stevelosh.com/blog/2012/10/a-modern-space-cadet/
      https://bitbucket.org/sjl/dotfiles/src/1da770d23a2168f0e0c2e50d0d3e84e5c6d38d27/keyremap4macbook/private.xml
    -->
    <item>
        <name>Force yourself to use the correct shift keys. [will interfere with Held Tab to Hyper]</name>
        <identifier>space_cadet.force_correct_shifts</identifier>

        <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::T, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

        <autogen>--KeyToKey-- KeyCode::Y,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::U,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::I,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::O,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::P,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::H,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::J,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::K,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::L,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::SEMICOLON, ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::N,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::M,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::COMMA,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::DOT,       ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::QUOTE,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>

        <!-- Add the rest of the keys -->
        <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::KEY_1,     ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::KEY_2,     ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::KEY_3,     ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::KEY_4,     ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::KEY_5,     ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

        <autogen>--KeyToKey-- KeyCode::KEY_6,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::KEY_7,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::KEY_8,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::KEY_9,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::KEY_0,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::MINUS,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::EQUAL,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>

        <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT,  ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
        <autogen>--KeyToKey-- KeyCode::BACKSLASH,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>

        <autogen>--KeyToKey-- KeyCode::SLASH,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    </item>

    <item>
      <name>Remap Held Tab to Hyper [diable force correct shift keys to use]</name>
      <appendix>OS X doesn't have a Hyper. This maps Held Tab to ⌃ + ⇧ + ⌥ + ⌘.</appendix>
      <appendix>You can use this key in your own custom keyboard shortcuts you create in apps.</appendix>

      <identifier>space_cadet.held_tab_to_hyper</identifier>

      <autogen>
        --KeyOverlaidModifier--
        KeyCode::TAB,
        ModifierFlag::NONE,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,

        KeyCode::TAB
      </autogen>
    </item>
  </item>

</root>
